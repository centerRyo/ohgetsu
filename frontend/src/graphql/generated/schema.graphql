type Query {
  ingredients: [IngredientType!]!
  genres: [GenreType!]!
}

type Mutation {
  createShop(input: CreateShopInput!): ShopType!
}

input CreateShopInput {
  name: String!
  address: String
  pic: String
  genre_id: String!
  menus: CreateMenusInput
}

input CreateMenusInput {
  create: [CreateMenuInput!]!
}

input CreateMenuInput {
  name: String!
  pic: String
  ingredients: CreateIngredientsInput
}

input CreateIngredientsInput {
  connect: [ID!]
}

input CreateIngredientInput {
  id: String!
}

type ShopType {
  id: ID!
  name: String!
  address: String
  pic: String
  genre: GenreType
  menus: [MenuType!]!
}

type MenuType {
  id: ID!
  name: String!
  pic: String
  ingredients: [IngredientType!]!
}

type IngredientType {
  id: ID!
  name: String!
  category: Category
}

type GenreType {
  id: ID!
  name: String!
}

enum Category {
  MAIN
  SUB
}
